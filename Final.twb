<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SavingAnalyticObjects />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='winemag-data-geocoded' inline='true' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='winemag-data-geocoded' name='textscan.0oz8wiv0snkxro1czk9t511azdbm'>
            <connection class='textscan' directory='C:/Users/geoffc.REDMOND/OneDrive/INFX 562/uw-infx562-data-viz/data' filename='winemag-data-geocoded-clean.csv' password='' server='' />
          </named-connection>
          <named-connection caption='winemag-data-geocoded-clean' name='textscan.1wsf3ol0cviei90ztbo4d198u3m0'>
            <connection class='textscan' directory='C:/Users/geoffc.REDMOND/OneDrive/INFX 562/uw-infx562-data-viz/data' filename='winemag-data-geocoded-clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[winemag-data-geocoded.csv].[name]' />
                <expression op='[winemag-data-geocoded-clean.csv].[name]' />
              </expression>
              <expression op='='>
                <expression op='[winemag-data-geocoded.csv].[winery]' />
                <expression op='[winemag-data-geocoded-clean.csv].[winery]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.0oz8wiv0snkxro1czk9t511azdbm' name='winemag-data-geocoded.csv' table='[winemag-data-geocoded#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='string' name='country' ordinal='2' />
              <column datatype='string' name='description' ordinal='3' />
              <column datatype='string' name='designation' ordinal='4' />
              <column datatype='integer' name='points' ordinal='5' />
              <column datatype='real' name='price' ordinal='6' />
              <column datatype='string' name='province' ordinal='7' />
              <column datatype='string' name='region_1' ordinal='8' />
              <column datatype='string' name='region_2' ordinal='9' />
              <column datatype='string' name='taster_name' ordinal='10' />
              <column datatype='string' name='taster_twitter_handle' ordinal='11' />
              <column datatype='string' name='title' ordinal='12' />
              <column datatype='string' name='variety' ordinal='13' />
              <column datatype='string' name='winery' ordinal='14' />
              <column datatype='string' name='name' ordinal='15' />
              <column datatype='real' name='lat' ordinal='16' />
              <column datatype='real' name='long' ordinal='17' />
              <column datatype='string' name='address' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.1wsf3ol0cviei90ztbo4d198u3m0' name='winemag-data-geocoded-clean.csv' table='[winemag-data-geocoded-clean#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
              <column datatype='string' name='country' ordinal='3' />
              <column datatype='string' name='description' ordinal='4' />
              <column datatype='string' name='designation' ordinal='5' />
              <column datatype='integer' name='points' ordinal='6' />
              <column datatype='real' name='price' ordinal='7' />
              <column datatype='string' name='province' ordinal='8' />
              <column datatype='string' name='region_1' ordinal='9' />
              <column datatype='string' name='region_2' ordinal='10' />
              <column datatype='string' name='taster_name' ordinal='11' />
              <column datatype='string' name='taster_twitter_handle' ordinal='12' />
              <column datatype='string' name='title' ordinal='13' />
              <column datatype='string' name='variety' ordinal='14' />
              <column datatype='string' name='winery' ordinal='15' />
              <column datatype='string' name='name' ordinal='16' />
              <column datatype='real' name='lat' ordinal='17' />
              <column datatype='real' name='long' ordinal='18' />
              <column datatype='string' name='address' ordinal='19' />
              <column datatype='string' name='color' ordinal='20' />
              <column datatype='real' name='CountWithin5Km' ordinal='21' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[CountWithin5Km]' value='[winemag-data-geocoded-clean.csv].[CountWithin5Km]' />
          <map key='[F1 (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[F1]' />
          <map key='[F1]' value='[winemag-data-geocoded.csv].[F1]' />
          <map key='[Unnamed: 0 (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[Unnamed: 0]' />
          <map key='[Unnamed: 0.1]' value='[winemag-data-geocoded-clean.csv].[Unnamed: 0.1]' />
          <map key='[Unnamed: 0]' value='[winemag-data-geocoded.csv].[Unnamed: 0]' />
          <map key='[address (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[address]' />
          <map key='[address]' value='[winemag-data-geocoded.csv].[address]' />
          <map key='[color]' value='[winemag-data-geocoded-clean.csv].[color]' />
          <map key='[country (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[country]' />
          <map key='[country]' value='[winemag-data-geocoded.csv].[country]' />
          <map key='[description (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[description]' />
          <map key='[description]' value='[winemag-data-geocoded.csv].[description]' />
          <map key='[designation (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[designation]' />
          <map key='[designation]' value='[winemag-data-geocoded.csv].[designation]' />
          <map key='[lat (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[lat]' />
          <map key='[lat]' value='[winemag-data-geocoded.csv].[lat]' />
          <map key='[long (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[long]' />
          <map key='[long]' value='[winemag-data-geocoded.csv].[long]' />
          <map key='[name (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[name]' />
          <map key='[name]' value='[winemag-data-geocoded.csv].[name]' />
          <map key='[points (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[points]' />
          <map key='[points]' value='[winemag-data-geocoded.csv].[points]' />
          <map key='[price (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[price]' />
          <map key='[price]' value='[winemag-data-geocoded.csv].[price]' />
          <map key='[province (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[province]' />
          <map key='[province]' value='[winemag-data-geocoded.csv].[province]' />
          <map key='[region_1 (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[region_1]' />
          <map key='[region_1]' value='[winemag-data-geocoded.csv].[region_1]' />
          <map key='[region_2 (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[region_2]' />
          <map key='[region_2]' value='[winemag-data-geocoded.csv].[region_2]' />
          <map key='[taster_name (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[taster_name]' />
          <map key='[taster_name]' value='[winemag-data-geocoded.csv].[taster_name]' />
          <map key='[taster_twitter_handle (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[taster_twitter_handle]' />
          <map key='[taster_twitter_handle]' value='[winemag-data-geocoded.csv].[taster_twitter_handle]' />
          <map key='[title (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[title]' />
          <map key='[title]' value='[winemag-data-geocoded.csv].[title]' />
          <map key='[variety (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[variety]' />
          <map key='[variety]' value='[winemag-data-geocoded.csv].[variety]' />
          <map key='[winery (winemag-data-geocoded-clean.csv)]' value='[winemag-data-geocoded-clean.csv].[winery]' />
          <map key='[winery]' value='[winemag-data-geocoded.csv].[winery]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[points]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>points</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_1]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>region_1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_2]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>region_2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_name]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>taster_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_twitter_handle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_twitter_handle]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>taster_twitter_handle</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variety</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variety]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>variety</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[winemag-data-geocoded.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0 (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>designation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[designation (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>designation</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[points (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>points</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_1 (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>region_1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region_2 (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>region_2</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_name (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>taster_name</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taster_twitter_handle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[taster_twitter_handle (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>taster_twitter_handle</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variety</remote-name>
            <remote-type>129</remote-type>
            <local-name>[variety (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>variety</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winery</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winery (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>winery</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address (winemag-data-geocoded-clean.csv)]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountWithin5Km</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CountWithin5Km]</local-name>
            <parent-name>[winemag-data-geocoded-clean.csv]</parent-name>
            <remote-alias>CountWithin5Km</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Points/$' datatype='real' name='[Calculation_74590898324000768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[points]/[price]' />
      </column>
      <column caption='Log($)' datatype='real' name='[Calculation_74590898325168129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='log([price])' />
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[F1 (winemag-data-geocoded-clean.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Region 1 Filter Target' datatype='string' name='[Region 1 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[region_1]' />
      </column>
      <column datatype='integer' hidden='true' name='[Unnamed: 0 (winemag-data-geocoded-clean.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Unnamed: 0.1]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <column caption='Address (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[address (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Country (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[country (winemag-data-geocoded-clean.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Description (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[description (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Designation (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[designation (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Designation' datatype='string' name='[designation]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat (Winemag-Data-Geocoded-Clean.Csv)' datatype='real' hidden='true' name='[lat (winemag-data-geocoded-clean.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long (Winemag-Data-Geocoded-Clean.Csv)' datatype='real' hidden='true' name='[long (winemag-data-geocoded-clean.csv)]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[name (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Points (Winemag-Data-Geocoded-Clean.Csv)' datatype='integer' hidden='true' name='[points (winemag-data-geocoded-clean.csv)]' role='measure' type='quantitative' />
      <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
      <column caption='Price (Winemag-Data-Geocoded-Clean.Csv)' datatype='real' hidden='true' name='[price (winemag-data-geocoded-clean.csv)]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Province (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[province (winemag-data-geocoded-clean.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Region 1 (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[region_1 (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
      <column caption='Region 2 (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[region_2 (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Region 2' datatype='string' name='[region_2]' role='dimension' type='nominal' />
      <column caption='Taster Name (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[taster_name (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Taster Name' datatype='string' name='[taster_name]' role='dimension' type='nominal' />
      <column caption='Taster Twitter Handle (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[taster_twitter_handle (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Taster Twitter Handle' datatype='string' name='[taster_twitter_handle]' role='dimension' type='nominal' />
      <column caption='Title (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[title (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Variety (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[variety (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Variety' datatype='string' name='[variety]' role='dimension' type='nominal' />
      <column caption='Winery (Winemag-Data-Geocoded-Clean.Csv)' datatype='string' hidden='true' name='[winery (winemag-data-geocoded-clean.csv)]' role='dimension' type='nominal' />
      <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
      <column-instance column='[color]' derivation='None' name='[none:color:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[long]' derivation='None' name='[none:long:ok]' pivot='key' type='ordinal' />
      <column-instance column='[long]' derivation='None' name='[none:long:qk]' pivot='key' type='quantitative' />
      <column-instance column='[points]' derivation='None' name='[none:points:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price]' derivation='None' name='[none:price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
      <column-instance column='[winery]' derivation='None' name='[none:winery:nk]' pivot='key' type='nominal' />
      <group caption='Action (Color,Points,Price)' hidden='true' name='[Action (Color,Points,Price)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[color]' />
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[none:price:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Points,Price,Province)' hidden='true' name='[Action (Country,Points,Price,Province)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[none:price:ok]' />
          <groupfilter function='level-members' level='[province]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Province,Region 1)' hidden='true' name='[Action (Country,Province,Region 1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[province]' />
          <groupfilter function='level-members' level='[region_1]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Long)' hidden='true' name='[Action (Lat,Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:ok]' />
          <groupfilter function='level-members' level='[none:long:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Points,Price)' hidden='true' name='[Action (Points,Price)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[none:price:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Points,Price,Winery)' hidden='true' name='[Action (Points,Price,Winery)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[none:price:ok]' />
          <groupfilter function='level-members' level='[winery]' />
        </groupfilter>
      </group>
      <group caption='Action (Points,Winery)' hidden='true' name='[Action (Points,Winery)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:points:ok]' />
          <groupfilter function='level-members' level='[winery]' />
        </groupfilter>
      </group>
      <group caption='Action (Province)' hidden='true' name='[Action (Province)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[province]' />
        </groupfilter>
      </group>
      <group caption='Action (Province,Region 1)' hidden='true' name='[Action (Province,Region 1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[province]' />
          <groupfilter function='level-members' level='[region_1]' />
        </groupfilter>
      </group>
      <group caption='Action (Region 1 Filter Target)' hidden='true' name='[Action (Region 1 Filter Target)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region 1 (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region 1)' hidden='true' name='[Action (Region 1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[region_1]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Lat,Long)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:qk]' />
          <groupfilter function='level-members' level='[none:long:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, province'>
          <field>[country]</field>
          <field>[province]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/geoffc.REDMOND/OneDrive/INFX 562/uw-infx562-data-viz/data/winemag-data-geocoded.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/13/2018 05:47:03 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='297064' timestamp-start='2018-08-13 17:47:03.904' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1400</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>2</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1278</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>designation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[designation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>designation</remote-alias>
              <ordinal>3</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>417</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>points</remote-name>
              <remote-type>20</remote-type>
              <local-name>[points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>points</remote-alias>
              <ordinal>4</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>5</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>province</remote-alias>
              <ordinal>6</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region_1</remote-alias>
              <ordinal>7</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region_2</remote-alias>
              <ordinal>8</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taster_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taster_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taster_name</remote-alias>
              <ordinal>9</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>taster_twitter_handle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[taster_twitter_handle]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>taster_twitter_handle</remote-alias>
              <ordinal>10</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>11</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1273</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>variety</remote-name>
              <remote-type>129</remote-type>
              <local-name>[variety]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>variety</remote-alias>
              <ordinal>12</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winery</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>winery</remote-alias>
              <ordinal>13</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>379</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>14</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>379</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>15</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>367</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>16</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>367</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>17</ordinal>
              <family>winemag-data-geocoded.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>363</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>color</remote-alias>
              <ordinal>18</ordinal>
              <family>winemag-data-geocoded-clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountWithin5Km</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CountWithin5Km]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CountWithin5Km</remote-alias>
              <ordinal>19</ordinal>
              <family>winemag-data-geocoded-clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.513825' measure-ordering='alphabetic' measure-percentage='0.486175' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]&#10;[none:province:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Central Italy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Northwestern Italy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Northeastern Italy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9c755f'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Tuscany&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Sicily &amp; Sardinia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Veneto&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Lombardy&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Piedmont&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Italy Other&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9da7'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;Southern Italy&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:winery:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Abbazia Santa Anastasia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Agostina Pieri&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Agricola Pugliano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Agricoltori del Chianti Geografico&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Alberice&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Albino Piona&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Allegrini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Altùris&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Andriano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Anterra&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Antica Hirpinia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Antonio Sanguineti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Antoniolo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Argillae&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Assuli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Azelia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Baccinetti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Baldi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Barberani&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Barraco&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Beccarello&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bellussi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bertani&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Biondi Santi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bollini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bonacchi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bonazzi Dario e Fabio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Borgo Salcetino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bortolin Angelo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bottega Vinai&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Bressan&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Broglia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Buglioni&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cà ed Balos&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ca&apos; du Rabajà&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Caccia al Piano 1868&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cala de&apos; Poeti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Camigliano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Campo alle Comete&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Canonica a Cerreto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantalici L&apos;Antica Fornace di Ridolfo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina Caorsa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina dei Produttori Nebbiolo di Carema&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina di Monteforte&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina Negrar&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina Santa Maddalena&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantina Tudernum&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine De Falco&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine Florio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine Gemma&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine Lanzavecchia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine Maschio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cantine San Silvestro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Capichera&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Carletto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Carlo Giacosa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Casabianca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Casale dello Sparviero&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Casato1&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cascina Chicco&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cascina Morassino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Casina di Cornia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castelgiocondo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castellinuzza e Piuca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castello della Sala&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castello di Meleto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castello di Radda&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castello Montauto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Castelvecchio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cavallotto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cefalicchio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cent&apos;Anni&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cerbaia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Chiorri&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cirotto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cleto Chiarli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cliffhanger&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Col Vetoraz&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Colle dei Bardellini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Collelungo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Colli di Castelfranci&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Colonnara&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Contadi Castaldi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Conti Zecca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cordella&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Corte dei Venti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Corte San Benedetto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Costantino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;D&apos;Antiche Terre&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;David Sterza&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Deltetto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Di Filippo Sallustio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Di Meo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Diego Finocchi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Domodimonti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Donna Anita&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Dosio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Duemani&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Elvio Cogno&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ermacora&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Falezza&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Falkenstein&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria Alois&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria del Cerro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria di Petrognano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria di San Quintino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria Il Muro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria Lavacchio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria Petrolo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fattoria Torre a Cona&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Felline&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Feudi di San Gregorio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Feudo Solaria&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fondo Antico&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fongaro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Foradori&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Franchetto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Franco Serra&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fratelli Berlucchi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Fruscalzo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Gaja&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Gemin&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Giacomo Mori&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Gianfranco Bovio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Giannoni Fabbri&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Giovanna Madonia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Girolamo Dorigo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Giuseppe Rinaldi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Grati&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Gruppo Casaleone&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Gualandi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Guido Porro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;I Balzini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;I Fabbri&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Il Bosco di Grazia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Il Colombaio di Santachiara&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Il Molino di Grace&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Il Pollenza&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Isidoro Polencic&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Jankara&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Jorche&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Kirkland Signature&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Kössler&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Braccesca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Cignozza&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Contea&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Fiera&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Fusina&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Mannella&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Prevostura&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Selva&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Tosa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;La Vigna di Iseppo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Lamborghini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Bertarole&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Calle&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Contesse&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Macchiole&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Piane&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Le Strie&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Les Crêtes&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Livio Voghera&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Luca Bosio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Luccarelli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Luigi Oddero &amp; Figli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Madonna Nera&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Malvirà&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Manenti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marangona&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marcaurelio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marchese dell&apos;Elsa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marchesi Ginori Lisci&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marco Felluga&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Marisa Cuomo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Maso Martis&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Masseria Setteporte&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Massimiliano Vivalda&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Matané&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mauro Sebaste&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mezzacorona&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mirafiore&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mocali&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Monchiero Carbone&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Monte dall&apos;Ora&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Monte Rossa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Montecariano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Montesel Renzo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Monzio Compagnoni&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Moser&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Muzic&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Negro Giuseppe&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Nino Franco&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Nobilissima&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ofanto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ormanni&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Paladin&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Paniole&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Parusso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Pecci Celestino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Perusini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Petrelli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;PianCornello&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Piero Busso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Pietro Caciorgna&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Pighin&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Plozner&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Podere Guado al Melo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Podere Paganico&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Podere Prospero&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poderi dei Bricchi Astigiani&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poggio al Chiuso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poggio Argentiera&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poggio Rubino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Poggioventoso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Prà&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Primo Volo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Principi di Porcìa&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Proprietà Sperino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Querce Bettina&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Raineri Gianmatteo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Remo Farina&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Renato Ratti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Riecine&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Rivella Silvia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Roberto Cipresso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Rocca di Montemassi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Romanelli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Rontana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ruffino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Salicutti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;San Cassiano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;San Silvestro&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Santa Cristina&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Sartori&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Savoia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Scilio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Scubia&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Selvapiana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Setriolo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Sobrero&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Sorelle De Nicola&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Spagnol&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Stomennano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tabarrini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Taliano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tecce&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenimenti Angelini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Belguardo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Casali&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta dei Mille&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta di Biserno&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta di Nozzole&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Duecorti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Klaus Lentsch&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Le Calcinaie&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Oliveto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Roletto&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Santa Maria&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenuta Valdipiatta&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenute di Vaira&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenute Grandi &amp; Gabana&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tenute Mater Domini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Terenzi&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Terrazze dell&apos;Etna&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Terre di Fiori&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Terre di Poggio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;The Vinum&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tommaso Bussola&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Tramin&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Triacca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Val delle Rose&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Valdicava&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Valentini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Vaona&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Vasari&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Ventolaio&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Viberti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Viberti Giovanni&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Vigna Traverso&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Vigne Guadagno&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Vigne Surrau&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Villa Bizzarri&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Villa di Bagnolo&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Villa Le Prata&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Villa Raiano&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Villadoria&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;VinArte&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Viticoltori Alto Adige&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Volpe Pasini&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Zanetti&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Zorzettig&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;460 Casina Bric&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Adami&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Agricola Querciabella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Alberto Nani&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Alberto Oggero&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Alessandro di Camporeale&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Altanuta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Altemasi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ambrosini Lorella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Andrea Felici&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Antale&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Antonia Gazzi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Arbiola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Artimino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Avanzi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Avissi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Azienda Agricola Milazzo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Baglio Curatolo Arini 1875&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Baracchi Riccardo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Barone Montalto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Battaglio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bellarina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Berlucchi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bindella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bissoni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bocale&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Borgo di Colloredo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Borgognot&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bosco del Merlo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Brancher&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Brigaldara&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Bruno Giacosa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Brunori&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cà del Vispo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ca&apos; de Lion Ghione&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ca&apos;Ronesca&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Caldera&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Campo al Noce&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Campo della Maestà&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Campogiovanni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Candoni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Canneta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina Bergamasca&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina del Barone&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina della Volta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina Iuli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina Produttori Cortaccia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantina Terre del Barolo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantine Barbera&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantine Due Palme&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantine Europa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantine Leonardo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cantine Rallo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Capannelle&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Caprili&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Caruso &amp; Minini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Casa Sola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Casalvento Radda&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cascina Bruciata&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cascina La Barbatella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Case Bianche&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castel Firmian&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castellargo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello del Terriccio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello di Corbara&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello di Gabiano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello di Neive&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello di San Donato in Perano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello Gabiano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello Montaúto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Castello Vicchiomaggio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cavalchina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Caviro&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Centanni Giacomo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ceste&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Cima&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Clara Marcelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Col di Bacche&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Colacino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Collato&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Collemattoni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Colmello di Grotta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Comm. G. B. Burlotto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Conterno Fantino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Conti Formentini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Contucci&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Corte Aleardi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Corte Lenguin&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Corte Mainente&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Corvo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Crocedimezzo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Dalfiume&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Decugnano dei Barbi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Di Lenardo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Digi Or&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Domenico Cavazza&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Donna Olimpia 1898&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Donne Fittipaldi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Duca del Frassino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Elio Altare&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Elio Grasso&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Enrico Serafino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Esperto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fabrizio Battaglino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Farnetella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria Coroncino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria di Lamole&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria Garbole&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria La Ripa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria Moretto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattoria Scopone&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fattorie Romeo del Castello&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ferrari Iris &amp; Figli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ferrero&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Feudo Disisa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fletcher&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fontanafredda&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fortediga&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fosso Corno&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Franz Gojer-Glögglhof&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Fratelli Urciuolo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gabriele Scaglione&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Garganuda&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Geografico Castello Tricerchi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Giacomo Ascheri&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gianni Brunelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gino Fasoli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Giovanni Rosso&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Giuseppe Campagnola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gracciano della Seta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Griesbauerhof&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Guerra&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Guerrieri Rizzardi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;I Capitani&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;I Luoghi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;I Veroni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Il Conte&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Il Follo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Il Paradiso di Frassina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Impostino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Jacopo Biondi-Santi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Kellerei Kaltern Caldaro&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Kupelwieser&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Battagliola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Castellada&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Diacceta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Fiammenga&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Lastra&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Palazzetta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Piasola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Roncaia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Togata&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;La Villa Veneta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;LaLuca&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Lazzeretti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Le Chiuse&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Le Fornaci&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Le Fraghe&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Le Miccine&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Le Rose&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Lecci e Brocchi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Livernano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Loredan Gasparini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Luciana Cordioli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Luciano Sandrone&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Luretta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Macarico&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Maestro Sanguineti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Malavasi Daniele&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mannucci Droandi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Marchesi De Gregorio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Marchiori&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Marilena Barbera&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mario Garrone&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mascarello Giuseppe e Figlio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Masseria del Feudo Grottarossa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Masut da Rive&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Matteo Correggia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mazzei&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Meran&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Milziade Antano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mola&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Molinari Carlo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Montaribaldi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Monte Tondo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Montecalvi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Montefrasco&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Montenisa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Monti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Mormoraia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Muròla&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Natale Verga&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Nicolucci&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Oasi degli Angeli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Orion Wine&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Padelletti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Palazzo Vecchio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Paolo Marcarino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Paradiso di Frassina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Paterna&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Perla del Garda&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Petrussa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Piccini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pierluigi Zampaglione&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pietralta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pieve de&apos; Pitti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pio Wines&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pisoni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Podere Ciona&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Podere la Marronaia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Poderi Arancio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Poderi San Lazzaro&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Poggio alle Querce&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Poggio Lungo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Poggiotondo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Principe Corsini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Prodigo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Produttori Colterenzio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Punset&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Quattro Mani&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Querciavalle&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rapido&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Re Manfredi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Revello Fratelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rivata&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rivetto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rocca di Castagnoli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Roccheviberti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Ronco Calino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sada&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Salvioni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;San Filippo di Giannelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;San Polino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sanpaolo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Santi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sarotto Roberto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Scanavino&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Seghesio&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Serradenari&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Silvano Follador&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Silvio Morando&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sorelle Bronca&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sorelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Stefano Accordini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Suberli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tascante&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenimenti Zabù&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Amalia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Cappellina&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Coppadoro&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta di Aglaea&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta di Fiorano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta di Poggio Uliveto&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta di Trecciano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta H.Lentsch&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta La Meridiana&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Montecchiesi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Polvaro&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta San Leonardo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Sant&apos;Anna&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenuta Sette Cieli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenute Cisa Asinari dei Marchesi di Gresy&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenute Fiorebelli&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tenute Sella&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Terra Jovia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Terre del Principe&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Terre di Talamo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Terredora Di Paolo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tiziano Mazzoni&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tollena&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Toros&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tosti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Trerè&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Umberto Cesari&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Valdipiatta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Valenti&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Valle dell&apos;Acate&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vecchie Terre di Montefili&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vesevo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vigliano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vigne dei Mastri&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vigneti Zanatta&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Villa Bellini&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Villa Cordevigo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Villa Girardi&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Villa Patrizia&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Villa Spinosa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vitae&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vitas&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Vodopivec&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Zambon&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Zenato&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Abbona Marziano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Agostino Bosco&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Agrinatura&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Albino Rocca&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Alessandro Veglio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Alliata&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Alta Luna&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Amalia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Angeli di Varano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Antichi Vigneti di Cantalupo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Antico Castello&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Antonutti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Arbéta&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Argiolas&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Azienda Agricola Cogno&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Balestri Valda&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bandini Villa Pomona&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Baricci&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bartali&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Begali&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bella Donna&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bella Sera&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Belpoggio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bianca Vigna&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bisceglia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bonavita&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Borgo San Daniele&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bortolomiol&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bottazza&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Bottega Vinaia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Brezza&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Brovia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Buondonno&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cà La Bionda&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ca&apos; Lojera&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ca&apos; Viola&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cafaggio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Camossi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Camparo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Candialle&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantarutti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina del Castello&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina di Puianello&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina Nalles Magre&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina Novelli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina Santadi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantina Valle Isarco&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantine dei Colli Tramonte&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantine Gini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantine Menhir&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cantine Sant&apos;Agata&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Capitoni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Capo Soprano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Carmina&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Casa Belfi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Casa di Grazia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Casale di Daviddi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cascina Adelaide&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cascina Corte di Barosi Alessandro&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cascina Galarin&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cascina Rabaglio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Casisano Colombaio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castellaccia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello Banfi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello di Ama&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello di Monastero&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello di Selvole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello di Velona&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castello Monte Vibiano Vecchio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Castelveder&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Casuccio Tarletti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cavazza&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Celestino Pecci&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ceretto&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ciabot Berton&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cocchi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Codice Citra&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Col Vetoraz Spumanti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Colle dei Venti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Colli di Lapio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Colosi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Conte Brandolini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Contini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Contrada Salandra&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cordero di Montezemolo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Corte Figaretto&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Corte Sant&apos; Alda&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Costaripa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;D&apos;Aione&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;D&apos;Alessandro&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dacapo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;De Angelis&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Demarie&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dievole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Domus Vitae&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Don Giovanni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Draga&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dürer-Weg&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;E. Pira e Figli (Chiara Boschis)&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;El Vegro&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Emidio Pepe&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Erste Neue&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Famiglia Cielo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria Ambra&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria della Talosa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria di Petroio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria il Palagio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria Le Pupille&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria Le Sorgenti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria Poggerino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fattoria Tregole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Felsina&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Feudi di San Marzano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;FiàNobile&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fondo del Barbera&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fontevecchia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Forchir&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Franci&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fratelli Bortolin&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Fuligni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Futura 14&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Galadino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Gemma&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Giacomo Vico&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Giavi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Giovanna Tantini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Girolamo Russo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Giulio Straccali&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Giuseppe Sedilesu&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Grattamacco&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Gregorio De Gregorio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Guado al Melo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Gulfi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;I Favati&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Cocco&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Conte d&apos;Alba&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Conventino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Mosnel&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Roncal&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Il Valentiano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Isolabella della Croce&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Josef Brigl&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;L&apos;Antica Fornace di Ridolfo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Bellanotte&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Calonica&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Collina dei Ciliegi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Fiorita&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Gerla&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Madonna&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Marca&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Quercia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Querciola&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Sala&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Serena&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;La Tunella&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Lamole di Lamole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Le Bertille&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Le Corti dei Farfensi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Le Macioche&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Le Pianelle&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Le Torri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Letrari&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Livon&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Luca Faccinelli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Luccio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Luigi Pira&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Maggio Vini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mamete Prevostini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Manimurci&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marcarini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marchesi Gondi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marco Canato&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marco Negri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marco Porello&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Marotti Campi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Maso Poli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Massimo Ronca&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Maurigi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mauro Veglio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Miali&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mier Vini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mocavero&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mondo del Vino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Monte del Frà&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Monteci&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Montecrocetta&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Montesole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Morando&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Mosolo Gleni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;My Moon&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Nada Fiorenzo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Nanni Copè&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Negro Lorenzo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Nino Negri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ognissole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ornella Molon&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Palagetto&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Panizzi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pasetti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pelassa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pescaja&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Piandibugnano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Piero Mancini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Piersanti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pietro Clementi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pilandro&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Plozza&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Podere Canalino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Podere Il Castellaccio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Podere Ruggeri Corsini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Poderi del Paradiso&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Poggio Al Mulino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Poggio Bonelli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Poggio Salvi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Pradio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Prima Cuvée&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Principi di Spadafora&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Provolo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Querceta&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Rabino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Rainoldi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Renieri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Reversanti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Rignana&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Roberto Mascelloni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Roberto Sarotto&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Rocca Felice&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Romeo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Roncolato&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Rotari&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Salis 1637&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sallier de la Tour&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;San Fabiano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;San Lorenzo Vini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;San Simone&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Santa Lucia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SassodiSole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Scopetani&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sensi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Serenissima&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Settesoli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Socré&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Spadaio e Piecorto&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Speri&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Stella Rosa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Strasserhof&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Talamonti&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Talis Wine&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenimenti Ca&apos; Bianca&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Bellafonte&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Castelbuono&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta dei Pianali&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta di Burchino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta di Pietra Porzia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Fernanda Cappello&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta L&apos;Illuminata&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta La Tenaglia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Le Querce&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Pederzana&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Roveglia&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Santa Maria alla Pieve&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenuta Valli&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tenute Niccolai&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Teresa Raiz&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;TerrAmore&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Terre d&apos;Aleramo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Terre da Vino&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Terre di San Venanzio Fortunato&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tiberini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tommasone&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Torlasco&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Torre Raone&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Travaglini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Trevisana&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tua Rita&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Val di Suga&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Valentino Butussi&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Varaschin&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vicari&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vignaioli del Morellino di Scansano&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vignemastre&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa Annaberta&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa Cafaggio&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa di Corlo&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa Mangiacane&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa Rubini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Villa San Giovanni&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vinchio-Vaglio Serra&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Viticoltori Ponte&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Volpaiole&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Weingut Stroblhof&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Zecchini&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Zorzon&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Accordini Igino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ager Falernus&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Agostino Vicentini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Aia Vecchia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Aldo Clerico&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Alois Lageder&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Amastuola&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ambasciata del  Buon Vino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Angelo Negro &amp; Figli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Anna Maria Abbona&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Antico Borgo di Sugame&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Apollonio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Armosa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Attems&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bacio della Luna&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ballancin&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Banero&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Baron Widmann&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Basilisco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bele Casel&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Beni di Batasiolo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bertaini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Biasotto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bibbiano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bivio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bonotto delle Tezze&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Borgogno&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bortoluzzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bracco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bricco dei Guazzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Brunelli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cà dei Frati&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cà Furlan&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cà Montanari&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ca&apos; Nova&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Caiarossa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Calbello&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Campo alla Sughera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Canella&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Canoso&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Canti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina dei Colli Amerini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina del Nebbiolo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina di Sorbara&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina Pedres&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina Sociale Barbera dei Sei Castelli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina Sociale della Valpantena&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantina Valpolicella Negrar&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantine di Dolianova&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantine Federiciane&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantine Gulino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantine Olivella&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cantine Volpi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Capolino Perlingieri&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Carbone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Carpenè Malvolti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Casa Emma&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Casale del Mare&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Casalfarneto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cascina Ballarin&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cascina del Monastero&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cascina Roera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Casetta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castel Boglione&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castellani Michele &amp; Figli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castello d&apos;Albola&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castello di Bossi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castello di Montegiove&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castello di Uzzano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castello San Donato in Perano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Castiglion del Bosco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Caven&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cembra&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cesari&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ciavolich Giuseppe&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cielo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Citille di Sopra&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Codirosso&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Col d&apos;Orcia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Colesel&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Colle Spinello&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Collina San Ponzio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Collis Veneto Wine Group&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Colterenzio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Conte d&apos;Attimis-Maniago&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cormòns&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cornaleto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Corte Giacobbe&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Corte Sermana&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Costaruél&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cottanera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;De Filippi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Dessilani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Dezzani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Dirupi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Donato D&apos;Angelo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Drei Donà Tenuta La Palazza&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ecco Domani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Egger-Ramer&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;El Vin&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Endrizzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Eugenio Collavini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fanti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria Bini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria del Pino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria di Casalbosco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria di Sammontana&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria la Castellina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria Mantellassi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria San Felo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fattoria Vitiano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ferrando&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ferruccio Sgubin&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Feudo Antico&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fiegl&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fontana Candida&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fornacina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Franco Molino Cascina Rocca&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Franco Mondo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fratelli Muratori&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fumanelli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gamba&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Germano Angelo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gian Piero Marrone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gianni Doglia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gigi Rosso&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Giovanni Chiappini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Giulio Accornero e Figli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gomba&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Graziano Merotto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Grifalco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Grillo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gualdo del Re&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Hauner&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;I Greppi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Il Cavaliere&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Il Falchetto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Il Grappolo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ïl Macchione&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Il Palagione&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Il Vino dei Padri&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Istine&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Josef Weger&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;L&apos;Arco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;L&apos;Oca Ciuca&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Cappuccina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Colombina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Ganghija&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Gioiosa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Montecchia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Querce&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Querciolina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Rasina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Spinetta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;La Valle&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Lanciola&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Caniette&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Cecche&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Farnete&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Manzane&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Ragnaie&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Torri di Campiglioni&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Le Vigne di Ca&apos; Nova&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Librandi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Loacker&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Lucchetta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Lucchetti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Luigi Voghera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Luna Di Luna&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Majolini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;MandraRossa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Manzini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Marchesato degli Aleramici&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Marchesi Torrigiani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Marega&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Marulli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Massanera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Massimo Daldin&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Massucco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Medici Ermete&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Michele Satta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mila Vuolo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mocine&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mongioia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Monte Faustino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Montelvini Venegazzù&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Montevertine&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Morgante&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Mottura&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Musico&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nals Margreid&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nanni Copé&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Nera&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Noelia Ricci&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Olivetta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Oscar Bosio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Palari&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Paluzzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Paolo Calì&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pasqua&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pepi Lignana&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Peter Zemmer&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Piantate Lunghe&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Piegaia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pierpaolo Pecorari&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pietro Zardini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pio Cesare&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Podere Brizio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Podere L&apos;Aione&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Podere Rocche dei Manzoni&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Podere San Giacomo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Poderi Foglia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Poggio al Tufo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Poggio dell&apos;Aquila&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Poggio di Bortolone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Poggio Stenti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Posto Bello&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Pratesi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Principiano Ferdinando&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Prunotto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Querceto di Castellina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Raphael Dal Bo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Renzo Seghesio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Rigo Filippo - Ai Rabaj&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Riondo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Rivani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Rocca del Dragone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Roccafiore&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ronchi di Cialla&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ruggeri &amp; C.&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Russo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;SalvaTerra&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;San Felice&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;San Martino&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sandrone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Santa Maria La Palma&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sarotto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sator&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Scriani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sei Amici&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Sergio Mottura&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Serra dei Fiori&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Signano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Soligo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;St. Michael-Eppan&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Stella Mia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Stroppiana&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Supèrbio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Talosa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenimenti Luigi D&apos;Alessandro&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Cà Bolani&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Cerulli Spinozzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta dell&apos;Ornellaia&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta di Castellaro&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta di Serramarrocco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Friggiali&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Il Faggeto&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta La Fuga&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Luisa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Pietramora&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Ponte&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta San Giorgio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Santo Pietro&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenuta Villa Trasqua&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tenute Orestiadi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Terra d&apos;Aligi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Terre de Trinci&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Terre Nere Campigli Vallone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tesoro della Regina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tiezzi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tormaresca&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Torresella&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Trabucco&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tre Donne&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Uggiano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Valchiarò&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Valiano&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Varvaglione Vigne &amp; Vini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Verbena&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vidussi&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vie di Romans&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vignamato&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vigneti Fantinel&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Villa&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Villa Canestrari&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Villa Erbice&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Villa Monteleone&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Villa S. Anna&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vinicola Serena&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vino dei Fratelli&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Vinopera Bervini&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Viticultori Associati Canicatti&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Weingut Niklas&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Wiegner&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Zymè&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ada Nada&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Agricola Bellaria&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Albatreti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Aldo Conterno&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Alessandro Tofanari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Altadonna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ambo Secco&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ambrogio e Giovanni Folonari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Anna Spinato&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Anselma&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Antinori&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Aquila del Torre&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Arnaldo Caprai&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Attilio Ghisolfi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Badia a Coltibuono&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Banfi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Baroncini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Barone Cornacchia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bastianich&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Belisario&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Benito Ferrara&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bertolani&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bibi Graetz&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Blason&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Borgo Conventi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Borgo San Leo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Borgogno F.lli Serio e Battista&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bortomiol&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Braida di Giacomo Bologna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bricco Maiolica&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Brunelli Martoccia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cà del Doge&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cà della Scala&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cà Salina&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ca&apos; Rugate&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Calabretta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Campinuovi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Campo di Sasso&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Canevel&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Altarocca&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina del Pino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina di Venosa&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Giardino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Produttori Bolzano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Sociale di Dolianova&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Valle Tritana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantina Zaccagnini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantine Benedetti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantine di Marzo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantine Lenotti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cantine Paolo Leo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Capanna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Capoverso&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Carpineto&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Casa D&apos;Ambra&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Casa Girelli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Casalnova&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cascina Bongiovanni&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cascina del Pozzo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cascina Guido Berta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cascina Saria&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castel di Pugna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castellare&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castellarin&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello dei Rampolla&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello di Buttrio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello di Montepò&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello di Verduno&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello di Vicarello&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Castello Sonnino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cataldi Madonna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Caves Cooperatives de Donnas&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cencioni Patrizia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cesarini Sforza&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cielo e Terra&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ciù Ciù&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Col de&apos; Salici&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Coli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Collelceto&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Collina Serragrilli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Colutta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Consorzio Vini Tipici di San Marino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Conte Ferdinando Guicciardini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Conti Leopardi di San Leopardo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Contrade di Taurasi - Lonardo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cornarea&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Corte Giara&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Corteforte&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cottini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;CVA Canicattì&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dal Cero Tenuta di Corte Giacobbe&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;De Forville&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;De Lucia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Di Filippo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dogarina&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Donelli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dreolino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dubl&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Elena Fucci&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Enio Ottaviani&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Erede di Chiappone Armando&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fabiano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fantinel&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria Campigiana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria di Corsignano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria di Valiano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria La Lecciaia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria La Striscia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria Montecchio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria San Michele a Torri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fattoria Zerbina&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ferrari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Feudo Arancio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Feudo Monaci&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fietri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fontana d&apos;Italia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Francesco Sobrero&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Francone&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fratelli Ponte&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Furlan&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Gamba Gnirega&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Germano Ettore&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Gianfranco Alessandria&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Gilberto Boniperti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Gionelli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Giovanni Dri Il Roncat&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Giuliano Tiberi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Giulio Ferrari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Goretti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Gregoletto&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Grotta del Ninfeo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Guasti Clemente&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;I Botri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;I Saltari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Il Cancelliere&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Il Cavalierino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Il Feuduccio Di S. Maria D&apos;Orni&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Il Palazzo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Il Poggiolo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ileana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Italo Cescon&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Josetta Saffirio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Kris&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Kuenhof&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;L&apos;Armangia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Carraia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Corsa&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Corte&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Gironda di Galandrino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Montina&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Raia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Regola&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Spinona&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Traiana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;La Velona&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Lantieri de Paratico&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Casalte&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Fonti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Marchesine&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Ragose&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Tre Stelle&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Le Vigne di Eli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Lis Neris&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Loacker Corte Pavone&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Losi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Luce della Vite&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Luna Nuda&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Lunadoro&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Malabaila&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Mangiacane&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Marchese Carlo Guerrieri Gonzaga&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Marchesi Alfieri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Marchesini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Marenco&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Marziano Abbona&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Masseria Altemura&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Mastroberardino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Mazzoni&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Melini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Michele Taliano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Michele Ventura&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Mirus&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Moncaro&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Monogram&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Monte Santoccio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Montemercurio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Montevetrano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Morini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Murgo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Nanfro&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Nervi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Nicodemi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Nottola&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Olivi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Oriel&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;OT&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Palazzo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Paolo Manzone&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pasquale Pelissero&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Perazzeta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Petra&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Piazzano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pier&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pietracupa&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pietroso&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pioiero&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Podere Capaccia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Podere La Berta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Podere Sapaio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poderi Alasia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poderi Luigi Einaudi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poggio al Vento&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poggio delle Robinie&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poggio di Sotto&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Poggio Verrano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pozzi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Prelius&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Prinsi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Pugnane&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Quercia al Poggio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Raphael&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rapido Red&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rascioni e Cecconello&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ressia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rivera&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rocca del Principe&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Rocche Costamagna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ronchi di Giancarlo Rocca&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Russiz Superiore&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Salgari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Salvatore Molettieri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;San Fereolo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;San Michele Eppan&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sanfeletto&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Santa Sofia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Scacciadiavoli&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Scubla&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sererraglio Carole Bouquet&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Serni Fulvio Luigi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sikelia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sommariva&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sortina&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Statti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Stemmari&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sturm&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tamburini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tamellini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenimenti Montagnana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Cà du Russ&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Chiccheri&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta dell&apos;Ugolino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta di Ceppaiano&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta di Sesta&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Fujanera&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta La Gigliola&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Mazzolino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Poggio il Castellare&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta San Guido&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Santomè&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Sasso Orlando&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenuta Vitalonga&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenute Costa&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tenute Rubino&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Terra d&apos;Arcoiris&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Terre degli Svevi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Terre Nere di Campigli - Vallone&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tinazzi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tornatore&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Torrenera&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Torrevento&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tre Fiori&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tre Monti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tringali Casanuova&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ugo Lequio&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Valdellövo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vallana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Venturini Baldini&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Verrone&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vietti&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vignavecchia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vigneti Le Monde&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Carra&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Fiorita&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Giada&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Montignana&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Pozzi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Villa Sandi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vinosia&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vitevis&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Vivera&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Zanoni&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ziobaffa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Abbazia di Novacella&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Adria Vini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Agricola Pace&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Agricola Tamburini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Albinea Canali&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Alessio Komjanc&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Althe&apos;a&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Amarano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Andreola&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Antica Enotria&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Antonelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Antonino Tringali-Casanuova&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Argentiera&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Arnaldo Rivera&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ascevi Luwa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Avignonesi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Baglio di Pianetto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Barba&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Barone Fini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Barone Ricasoli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Batzella&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bellenda&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bersano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Binomio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bixio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Boffa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Borgo Magredo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Boroli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bosio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Brangero&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Brocatelli Galli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bucci&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cà Bianca&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cà Di Rajo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cà Richeta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ca&apos; dei Mandorli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ca&apos; del Baio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cabert&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CàMaiol&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Canalicchio di Sopra&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina Cortaccia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina del Cerro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina di Gambellara&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina Ma.Ri.Ca.&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina Progettidivini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantina Tomaso Gianolio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantine Ceci&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantine Farro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantine Lunae Bosoni&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cantine Riunite&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Caparzo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Capo di Vigna&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cara Mia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;CarlindePaolo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Casa alle Vacche&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Casale del Giglio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Casanuova delle Cerbaie&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cascina Casalin&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cascina Liuzzi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Casebianche&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castel Sallegg&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castelli del Grevepesa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castello della Paneretta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castello di Gabbiano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castello di Poppiano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castello di Razzano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castello La Leccia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Castelluccio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cavalierino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cecchi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Centovigne&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cerbaiona&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Chiara Boschis - E. Pira e Figli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Chloe&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cipriana&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Claudio Quarta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Col di Rocca&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Collazzi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Collevite&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Colli di Serrapetrona&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Colombera &amp; Garella&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Condé&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Conti di Buscareto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Coppiere&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Corte Archi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Corte Pavone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Costa di Bussia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cupcake&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Curto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Dall&apos;Abaco Fedrigoni&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Dante Rivetti&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Dei&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Diadema&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Doga delle Clavule&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Domenico Fraccaroli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Donnafugata&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Duca di Saragnano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Elisabetta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Eredi Enzo Raspi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Eredi Lodali&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Falchini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fassati&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria dei Barbi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria di Montecchio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria Il Colombaio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria La Vialla&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria Paradiso&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fattoria Sorbaiano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fazi Battaglia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ferrandes&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Feudi del Pisciotto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Feudo di Gulfa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Feudo Montoni&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Foffani&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fonte alla Selva&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fonterenza&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Francesco Boschis&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Frascole&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Frati Bianchi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gagliole&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gattavecchi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Giacomo Fenocchio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gianni Tessari&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gianpiero Marrone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Giordano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Giribaldi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Giuseppe Gabbas&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gradis&apos;ciutta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Grimaldi Bruna&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Gru&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Guidi 1929&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;I Clivi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Icario&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Il Colombaio di Cencio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Il Macchione&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Il Poggiolo E. Cosimi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Inalto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Innocenti&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ioppa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Jasci &amp; Marchesani&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Klaus Lentsch&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;L&apos;Aietta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Boatina&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Cerbaiola&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Colombaia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Fornace&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Magia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Pieve&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Poderina&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Sansonina&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Torre&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Travaglina&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;La Zerba&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lambardi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Le Battistelle&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Le Cinciole&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Le Gode&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Le Morette&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Le Senate&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Leone de Castris&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Livio Felluga&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lohsa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lornano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Luigi Baudana&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Luigino Grimaldi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Macaron&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Machiavelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Malgra&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Manzone Fratelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Marchesi di Barolo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Marco Cecchini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mario Schiopetto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Masciarelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Masseria del Fauno&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Masserie Pisari&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Massi di Mandorlaia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mauro Franchino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Merotto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mionetto&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Molino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Monpissan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Monte Antico&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Montebelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Monterotondo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Montonale&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Moroder&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mulini di Segalari&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Musso&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Negretti&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Niedermayr Josef&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ocone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Orlando Abrigo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Paitin&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Palladino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Palmoletino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Paraschos&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Paternoster&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Perillo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Perticaia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pian delle Querci&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pico Maccario&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pietraventosa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pieve Santo Stefano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pizzolato&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Podere dei Brichhi Astigiani&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Podere Le Ripi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Podere Scopetone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poderi Colla&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poggiarellino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poggio Alloro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poggio Morino&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poggio Torselli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Poliziano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Principe di Corleone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Privitera&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Produttori Vini Manduria&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Quarticello&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Raccaro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Racemi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Regio Cantina&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ricci Curbastro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Rinaldini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Rizzi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Rocca di Frassinello&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Roccolo Grassi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Romana Carlo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Ronco del Gelso&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Salatin&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;San Biagio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;San Giusto a Rentennano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;San Quirico&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sant Agnese dei F.lli Gigli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sardus Pater&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Scambia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Scandolera&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Schiavenza&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Seconda Stella a Destra&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Selva Capuzza&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sesta di Sopra&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sirch&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sottimano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;St. Pauls&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Stefano Antonucci&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sylla Sebaste&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Taverna&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Teanum&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta 2 Castelli&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Arnulfo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Carretta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta degli Dei&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta di Arceno&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta di Lilliano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta di Vaira&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Ghiaccio Forte&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta i Saltari&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta La Vigna&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Moraia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Rocca&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta San Vito&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Setten&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenuta Solar&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenute Girolamo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tenute Soletta&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Terrabianca&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Terre di Leone&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tessari&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tolaini&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tolloy&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Torre Fornello&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tortarossa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Traerte&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tresa&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vagnoni&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Valdonica&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Valle Reale&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Valori&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Velenosi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vetrère&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Viglione Antonio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vigna di Pettineo&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vigne Matte&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa al Cortile&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa Cornaro&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa I Cipressi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa Mora&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa Poggio Salvi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Villa Vignamaggio&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vita Italia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Vitiano&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Voliero&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Zanasi&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Zisola&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Acinum&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Adalia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Agricola Punica&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Alberto Longo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Aldo Polencic&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Altavia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ancilla&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Angelini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Anselmi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Antica Casa Vinicola Scarpa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Antico Colle&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Araldica&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Arpepe&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Aurelio Settimo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Badia di Morrona&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Baracchi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Barone&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Barone di Villagrande&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Batasiolo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bellaria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bera&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Biancariva&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bigi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Boasso&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Borgo del Tiglio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Borgogno Giacomo e Figli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Boscarelli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bottega&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Brancaia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bricco Mondalino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Bruni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cà del Vént&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cà Maiol&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cà Vittoria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ca&apos;Romè&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Caldaro&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Campanile&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Campo Maseri&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;CampoReale&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Canicattì&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina Alice Bel Colle&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina Bartolo Mascarello&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina del Taburno&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina Fratelli Pardi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina Produttori Bolzano S. Maddalena/Gries&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantina Terlano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantine Astroni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantine di Ora&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantine Elmi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantine Lenotti di Lenotti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cantine Povero&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Capanne Ricci&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Capestrano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cappella Sant&apos;Andrea&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Carus Vini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Casa Raia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Casaloste&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cascina Bretta Rossa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cascina delle Rose&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cascina Val del Prete&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Case del Feudo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castel di Salve&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castellare di Castellina&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castello del Poggio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castello di Cacchiano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castello di Monterinaldi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castello di Verrazzano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castello Tricerchi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Castorani&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cava d&apos;Onice&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cavicchioli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cennatoio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cescon Italo Storia e Vini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cherri d&apos;Acquaviva&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cigliuti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ciro Picariello&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Civielle - Cantina della Valtenesi e della Lugana&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Col dei Venti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Coldisole&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Collalbrigo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Collemassari&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Collosorbo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Comelli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Conte Leopardi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Contrade di Taurasi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Contratto&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Corte Adami&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Corte Cariano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Corte Giona&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Cortenova&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Crissante Alessandria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Dal Forno Romano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Daniele Reale&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;De Stefani&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Di Giovanna&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Dogliotti 1870&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Donna Laura&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Drusian&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Elena Walch&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Emmi Veruccia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Enrico Gatti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;F.lli Trinchero&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fabio Motta&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Farnese&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria Carpineta Fontalpino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria di Grignano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria Fibbiano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria La Massa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria Montellori&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattoria Sardi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fattorie Parri&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ferrari Iris e Figli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ferrocinto&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Feudo di Santa Tresa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Firriato&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fontanabianca&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Forti del Vento&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fossacolle&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Frank &amp; Serafico&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Frank Cornelissen&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fratelli Seghesio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;G D Vajra&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Gancia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Genereaj&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ghione&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Gianfranco Fino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Gini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Giovanni Manzone&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Giuseppe Apicella&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Gorgo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Gran Passione&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Greppi Cupi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;I Campi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;I Stefanini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Il Brunone&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Il Chiosso&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Il Fitto&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Il Palazzone&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Il Veltro&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Illuminati Dino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;J. Hofstatter&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Judeka&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Kupel Wieser&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;L&apos;Astore Masseria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Ballerina&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Casa Dell&apos;Orco&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Dama&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Francesca&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Jara&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Mormoraia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Riva dei Frati&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Stoppa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;La Viarte&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lagaria&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Latium di Morini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Casematte&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Filigare&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Fonti a San Giorgio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Marognole&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Masciare&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Regge&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Vigne&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Le Vigne di Zamò&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lisini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lombardo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lovo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lucente&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Lungarotti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Maestro di Antichi Castelli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Malacari&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Manincor&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Marchesi Antinori&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Marchetti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Marco Cottini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Mariana&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Masari&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Masseria del Feudo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Mastrojanni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Meloni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ménage à Trois&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Miklus&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Moletto&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Mondoro&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Montalbera&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Monte Maggio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Monte Schiavo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Montenidoli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Montezovo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Morisfarms&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Muri-Gries&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Nardello&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Nicolis&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Novaia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Oggi!&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Olivini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ottella&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Pagani&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Palazzo Maffei&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Palmento Costanzo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Paolo Scavino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Passopisciaro&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Peri Bigogno&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Petrucco&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Piazzo Armando&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Pietradolce&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Pietrafitta&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Pievalta&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Piombaia Rossi-Cantini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Podere Castellinuzza&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Podere La Cappella&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poderi Aldo Conterno&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poderi Morini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poggio alla Sala&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poggio il Castellare&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poggio San Polo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poggio Trevvalle&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Poggiobello&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Primosic&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Progettidivini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Puiatti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Querciabella&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rattalino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Renato Buganza&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Resonata&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Réva&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rivetti Massimo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rocca delle Macìe&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rocche dei Manzoni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ronchi di Manzano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ronco Blanchis&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;S. Lucia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Salviano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;San Filippo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;San Giacomo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;San Osvaldo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Sangervasio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Santero&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Scagliola&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Scrimaglio&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Secondo Marco&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Serpaia di Endrizzi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Silvano Bolmida&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Soldo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Sordo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Stefania Mezzetti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Stival&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Suavia&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tasca d&apos;Almerita&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Alzatura&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Caparzo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Cocci Grifoni&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta del Portale&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta delle Terre Nere&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta di Fessina&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta di Tavignano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Gorghi Tondi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta La Marchesa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Monte Gorna&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Poggio Rosso&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta San Jacopo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Sarno 1860&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenuta Vitanza&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenute dei Vallarino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tenute Salvaterra&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Terra di Briganti&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Terra di Cipressi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Terre del Marchesato&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Terredora&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tiziano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tornesi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Torricino&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Toscolo&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tre Secoli&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tritano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Umani Ronchi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Valdifalco&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Valdinera&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Valle&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Vecchia Cantina di Montepulciano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Vèscine&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Vigin&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Vigne &amp; Vini&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Vigneti Villabella&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Villa Cerna&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Villa Gianna&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Villa Papiano&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Villa Rinaldi&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Villa Sparina&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Virna Borgogno&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Viviani&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Voga&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Volpago&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Zardetto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;A-Mano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Abbadia Ardenga&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Adanti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Agricola Sulin&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Alberto Voerzio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Alessandro Rivetto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Alpha Zeta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Altesino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Amore di Amanti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Andrea Oberto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Antica Corte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Antolini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Antonini Ceresa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Arduini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Arunda&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Avide&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Barale Fratelli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Barone Pizzini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bartenura&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Battistini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bellavista&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bernardis&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bindi Sergardi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Boccantino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bocelli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Borgo Isolabella&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Borgoluce&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bosco dei Cirmioli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bosco Nestore&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Brandini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Brjnda&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bruno Rocca&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cà di Frara&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Ca&apos; dei Zago&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Ca&apos;Tullio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Caldora Vini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cambrago&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Campomaggio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Canaletto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Canneto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Ariano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Cincinnato&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina di Bertiolo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Le Grotte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Produttori San Michele Appiano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Sociale di Mombercelli Terre Astesane&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantina Tollo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantine Bellini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantine del Borgo Reale&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantine Ermes&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantine Leonardo Da Vinci&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cantine Ravazzi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Caparra &amp; Siciliani&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Careglio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Casa al Vento&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Casale Daviddi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Casanova di Neri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cascina Cà Rossa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cascina La Ghersa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Case Paolin&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castel Pietraio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castellari Bergaglio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castello del Trebbio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castello di Fonterutoli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castello di Nipozzano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castello di Porcìa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castello Il Palagio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Castellucci Miano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Caudrina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cavalier Bartolomeo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cavit&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Centolani&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Ceuso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cignale&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cinciano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Claudio Alario&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Col di Lamo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Collavini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;ColleStefano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Colognole&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Colombaio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Concilio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Conti Costanti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Contrada Santo Spirito di Passopisciaro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Convento Cappuccini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Corte alla Flora&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Corte Falco&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Corte Moschina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;COS&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Costa Alessandro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cupano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Damilano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Danzante&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Degani&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Di Majo Norante&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Domenico Clerico&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Donnachiara&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Duca di Salaparuta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Eleva&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Elio Filippino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Elio Perrone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Enzo Boglietti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fabrizio Dionisio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fatalone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria Corzano e Paterno&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria di Cinciano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria di Magliano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria Giuseppe Savini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria La Rivolta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria Nittardi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria Selvanova&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fattoria Valacchi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fay&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Ferruccio Deiana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Feudo Maccari&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Florio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fondazione Edmund Mach&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Foss Marai&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fraccaroli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Franz Haas&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fratelli Zeni&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;G.A. Rossi di Medelana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Gabriele Valeriani&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Gaggioli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Garofoli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Giacomo Conterno&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Gianni Gagliardo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Giol&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Giovello&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Giuseppe Cortese&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Graci&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Guerra Albano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Guicciardini Strozzi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;I Carpini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;I Quaranta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;I Sodi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Icardi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Il Colle&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Il Grillesino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Il Paradiso di Manfredi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Inama&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Jacùss&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;K. Martini &amp; Son&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Kettmeir&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Battistina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Bioca&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Castellina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La di Motte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Farra&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Madonnina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Perla Marco Triacca&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Sabbiona&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Staffa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Tordera&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;La Vis&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Le 7 Camicie&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Le Cimate&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Le Ginestre&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Le Guaite&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Le Salette&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Lechthaler&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Li Veli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Lisabella&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Livia Fontana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Lorenz Martini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Luiano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Macchialupa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Malgrà&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Manzone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Marchesi de&apos; Frescobaldi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Marco Bonfante&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Mario Gagliasso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Mario Marengo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Marsiliana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Maschio dei Cavalieri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Masseria Felicia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Massimo Penna&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Máté&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Merk&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Meroi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Mineo Family Vineyards&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Molino di Sant&apos;Antimo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Montauto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Monte Zovo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Montepeloso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Monteraponi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Montipagano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Moro di Rinaldini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Musella&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Nativ&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Nicosia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Occhipinti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Orion Wines&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pagani de Marchi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Palazzone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Paradisone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Paternò di Vittoria&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Patria&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Perlage&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Piaggia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Piccoli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pietranera&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pieve Santa Restituta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pirro Varone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pitars&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Podere Brizio Roberto Bellini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Podere dal Nespoli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Podere La Vigna&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Poderi Arcangelo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;PoderNuovo a Palazzone&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Poggio alle Sughere&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Poggio Mandorlo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pojer &amp; Sandri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Principe Corsini Fattoria Le Corti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Principessa Gavia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Produttori del Barbaresco&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Quadra&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Quattroventi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Quintarelli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Recchia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Resta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Reverdito&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Rizieri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Rocca di Fabbri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Rocche Castamagna&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Roccolo del Lago&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Ronco dei Tassi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Saladini Pilastri&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;San Benedetto&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;San Giuseppe&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;San Polo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Sansonina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Santini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Saracco&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Sassi San Cristoforo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Scarzello&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Sella &amp; Mosca&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Serre Spumanti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Silvio Grasso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Simone Scaletta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Sorrentino&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Spadina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Stefano Amerighi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Straccali&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Subida di Monte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tassi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Argentiera&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Carlina&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Crocedimezzo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta di Angoris&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta di Ghizzano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta di Trinoro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta di Vignole&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Grimani&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta I Greppi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta La Ponca&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Monteti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Rapitalà&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta San Mauro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenuta Sette Ponti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenute del Cerro&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tenute Silvio Nardi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Terlato&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Terra Serena&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Terrale&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Terre di Giurfo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Teruzzi &amp; Puthod&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tiamo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Toffoli&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Torraccia del Piantavigna&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Trabucchi d&apos;Illasi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Trerose&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vadiaperti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Val di Botte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Valdo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Valle dell&apos;Asso&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Veglio&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vestini Campagnano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vigna degli Estensi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vigne Marina Coppi&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa a Sesta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa Corliano&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa Giulia&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa Granda&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa Pillo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villa Venti&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Villalta&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vinai dell&apos;Abbate&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vini Iovine&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Vite Colte&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Voerzio Martini&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Wine for Food&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Zeni&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Abbazia Monte Oliveto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Adriano Marco &amp; Vittorio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Agricole Vallone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;AgroArgento&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Al-Cantàra&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Albino Armani&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Alfonso Boeri&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Althéa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Andreola Orsola&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Antica Fratta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Antonio Caggiano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Argiano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ascheri&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Assolati&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Avignonesi-Capannelle&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Baldetti Alfonso&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Barbàcan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Barone Sergio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bava&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bella Bollè&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bellini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Belmondo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bersi Serlini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Biondi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bolla&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bolsignano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Borgo Maragliano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bortolin&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Botromagno&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Braschi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bricco del Prete&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Broccardo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Buccia Nera&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cà di Rajo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ca&apos; del Bosco&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ca&apos; Montini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ca&apos;nova&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cabreo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Camerano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Canalicchio Franco Pacenti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantagallo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina Dei Monaci&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina di Montalcino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina Luciani&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina Massara Burlotto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina San Martino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantina Tramin&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantine Aurora&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantine Cipressi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantine Lupo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cantine Russo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Caparsa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Capezzana&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Carillon&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Carlo Boscaini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Casa di Baal&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Casale della Ioria&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Casata Monfort&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cascina Castlet&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cascina Luisin&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Casetta Fratelli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Casetto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castelfeder&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castelli Martinozzi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castello della Rosa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castello di Luzzano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castello di Querceto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castello di Uviglie&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castello Monaci&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Castelvecchi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cavalli Tenuta degli Dei&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cecilia Beretta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ceralti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Chiesa Carlo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cirulli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Clavesana&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Col Saliz&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Colle Bereto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Colli del Soligo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Concadoro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Conselve&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Conti di Sn Bonifacio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Coppo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Corte dei Papi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Corte Rugolin&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Costa Olmo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Curto Marco&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cusumano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;D&apos;Orta - De Conciliis&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Dario Coos&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Delibori&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Diego Conterno&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Domenico de Bertiol&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Domìni Veneti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Dorigo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Duchessa Lia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ellena&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Enza&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Erik Banti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Eucaliptus&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Falesco&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Farina&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattori&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria Del Cerro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria di Felsina&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria di Montemaggio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria Il Lago&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria Laila&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria Petriolo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fattoria Terre del Marchesato&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fazio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Feudi della Medusa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Feudo Principi di Butera&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Folonari&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fontodi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Francesco Rinaldi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Franco Conterno&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fratelli Alessandria&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fratta Pasini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Gaierhof&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Gaudio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Giacomo Grimaldi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Gianni Voerzio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Giorgio Meletti Cavallari&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Girlan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Giuseppe Lonardi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;GMG Vinicola&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Grasso Fratelli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Grotta del Sole&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Guido Berta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Gurra di Mare&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;I Custodi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Borro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Colombaio di Santa Chiara&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Lebbio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Marroneto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Poggione&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Il Roverone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ippolito 1845&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Jermann&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Kornell&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;L&apos;Orcio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Bollina&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Casaccia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Ciarliana&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Fortuna&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Mancina&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Pisara&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Porta di Vertine&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Scolca&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Spinosa Alta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;La Torricella&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Lamberti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Bèrne&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Bocce&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Colture&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Grascete&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Palaie&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Solive&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Le Strette&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Leopoldo I di Toscana&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Livio Sassetti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Losi Querciavalle&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Luigi Maffini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Maccari Spumanti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Maculan&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Malibràn&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marabino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marcella Giuliani&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marchesi Fumanelli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marco de Bartoli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Marsaglia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Masi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Maso Canali&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Massimago&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mauro Molino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Methius&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mirabile&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mirù&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Monchiero&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Monte Cicogna&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Monte delle Vigne&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Montecappone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Montesel&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Montresor&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Moscone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mustilli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Negro Angelo e Figli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Niedrist&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Nugnes&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Oddero&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Orestiadi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Orma&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pala&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Paltrinieri&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Parmoleto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pe&apos;re Alessandro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pecchenino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pertinace&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pian delle Vigne&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Piera Martellozzo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pietro Beconcini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pieve Vecchia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Pigro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Planeta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Podere Forte&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Podere Monastero&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poderi dal Nespoli 1929&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poggio al Casone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poggio Antico&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poggio Nardone&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Poggio Nicchiaia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ponchione Maurizio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Portinari&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Principe Pallavicini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Quattro Leoni&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Radikon&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Renato Keber&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Renzo Masi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ridolfi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Risata&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Roagna&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Rocca di Montegrossi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Rodolfo Cosimi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ronco delle Betulle&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Salcheto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;San Carlo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;San Leonino&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;San Rustico&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sant Eurosia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sant&apos;Andrea in Colle&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sartarelli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Schiopetto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Schola Sarmenti di Terrulenta&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Selvanova&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sesti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Siro Pacenti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sommavite&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Spadafora&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Stefano Berti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Stefano Ferrucci&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Taba&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tedeschi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Barone Nicolò La Lumia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Cantalupi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Casaletti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta degli Ultimi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta del Nanfro&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta di Argiano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta di Morzano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta di Valgiano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Il Poggione&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta La Viola&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Montanello&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Olim Bauda&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Pierazzuoli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Rocca di Montemassi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Sant&apos;Antonio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenuta Stella&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tenute Lunelli&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tercic&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Terralsole&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Terre di Melazzano&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tezza&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tommasi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Torre di Luna&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Torre Mora&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Torre Quarto&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Trambusti&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Trevisiol&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Umberto Fracassi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Val d&apos;Oca&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Valentina Cubi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Valter Scarbolo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Venica &amp; Venica&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ventolaio di Fanti Luigi&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vettori&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vigna Piccola&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vigne di Mezzo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Vigne Regali&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa Bagnolo&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa Crespia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa La Selva&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa Mottura&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa Puccini&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa Schinosa&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villabella&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Viticcio&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Volpaia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Zonin&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Abraxas&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Accadia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Agostino Pavia &amp; Figli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Agrisole&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Aldegheri&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Alois&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Amantis&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Amatore&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Andrero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Angelo Bortolin&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Antichi Vinai 1877&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Anzivino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Armilla&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Astorre Noti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Baglio del Cristo di Campobello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Balia di Zola&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Banear&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Barbi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Baron di Pauli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Basile&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bel Colle&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Benanti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Benincasa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;BiancaVigna&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bisol&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bonfiglio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Borgo Scopeto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bortolotti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Botter&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bric Cenciurio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Bricco Grilli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Brugnano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Burchino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cà Lojera&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ca&apos; Marcanda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cagliero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Calatrasi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Campo al Mare&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Canalicchio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cancello del Barone&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Candido&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantele&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina del Giusto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina di Soave&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina Offida&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina Produttori di Valdobbiadene&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina Sociale Cooperativa di Copertino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantina Vallebelbo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantine del Notaio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantine Grasso&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantine Novelli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cantine Valenti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Capocroce&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Caposaldo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Carobbio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Casa Catelli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Casa di Terra&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Casa Roma&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Casale Triocco&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cascina Alberta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cascina Cucco&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cascina Garitina&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cascina Radice&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Casisano Tommasi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castellani&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castello Bonomi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castello di Bolgheri&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castello di Monsanto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castello di Spessa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castello Romitorio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castelvero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cave du Vin Blanc de Morgex et de la Salle&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Celli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cesani&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ciacci Piccolomini d&apos;Aragona&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ciavolich&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Citari&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Coffele&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cola&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Colle S. Mustiola di Fabio Cenni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Colli Ripani&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Collis&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Còlpetrone&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Conte Collalto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Contrada Michele&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Corte Fornello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Corte Sant&apos;Alda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Costa Archi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Coste Ghirlanda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;D&apos;Angelo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Dal Din&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;De Faveri&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;DeLucia Vineyards&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Destro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Dionigi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Donatella Cinelli Colombini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Donna Olga&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Dorigati&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Drei Donà&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Edi Keber&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Emilio Bulfon&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Eugenio Bocchino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fanetti - Tenuta S. Agnese&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria Bagnolo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria di Basciano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria di Ruppiano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria Kappa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria Le Terrazze&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria Poggio Capponi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria San Francesco&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fattoria Uccelliera&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ferghettina&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Feudi di Terra d&apos;Otranto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fidora&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Filippi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fongoli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fontana&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fontanavecchia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fornacelle&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Franco M. Martinetti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fratelli Bucci&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fratelli Casetta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Fulvio Luigi Serni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Galardi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Geretto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Giacosa Fratelli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Gigante&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Giovanni Almondo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Giulia Negri&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Godiolo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Gravner&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Guado al Tasso&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Guastaferro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Gump Markus Prackwieser&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;I Giusti e Zanza&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;I Vigneri&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Il Bastardo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Il Cascinone&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Il Corno&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Il Palagio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Il Sassolo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Isole e Olena&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Josef Niedermayr&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;L&apos;Antica Quercia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Ca&apos; Nova&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Canosa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Collina dei Lecci&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Giaretta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Marcellina&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Monacesca&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Mozza&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Rajade&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Sibilla&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Valentina&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;La Villa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Lamoretti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Albare&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Buche&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Due Terre&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Mandolare&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Potazzine&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Le Vigne di Alice&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Leuta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Lo Sparviere&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Lucania&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Luigi Giordano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Luigi Righetti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Luiz Barichello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Madonna Alta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Maggiovini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Manara&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Marcato&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Marcello Turra&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Marchesi Incisa della Rocchetta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Marco Scolaris&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Marsuret&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Martini &amp; Rossi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Masottina&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Masseto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Massolino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Mazzi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Michele Chiarlo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Moccagatta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Mongarda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Monte del Frá&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Montelvini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Monteverro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Moretti Omero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Morra Diego&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Motta&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Nada Giuseppe&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Nando&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Neirano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Nittardi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Olek Bondonio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Olivero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ornellaia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Palamà&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Panzanello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pasini San Giovanni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pelissero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Peteglia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pian dell&apos;Orino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pianirossi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pieropan&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pietro Rinaldi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pinino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Podere ai Valloni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Podere il Pozzo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Podere San Cristoforo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poderi Angelini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poderi Elia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poggio al Tesoro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poggio Borgoni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poggio Scalette&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Poggionotte&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pratello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Prima Mazzo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Principiano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pruneto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Querceto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rambaldi Vladimiro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rampa di Fugnano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Renzo Marinai&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ricossa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rinaldi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rocca Bernarda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rocca Giovanni&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Ronca&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Rubinelli Vajol&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Salvano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;San Fabiano Calcinaia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;San Luciano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Sandro de Bruno&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Sant&apos;Anjelus&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Santa Giulia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Santa Margherita&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Sassotondo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Scaranto&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Scopone&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Sequals&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Signae&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Solaria&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Soldera&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Spinelli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Stroblhof&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Talenti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tamburello&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenimenti Famiglia Cavallero&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Buon Tempo&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Cavalier Pepe&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta del Buonamico&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta di Capraia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta di Fraternita&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta di Riseccoli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Forconi&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta La Badiola&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Le Velette&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Peter Sölva &amp; Söhne&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta San Francesco&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Santavenere&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenuta Villa Tavernago&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tenute Olbios&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Terlan&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Terra dei Re&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Terre de la Custodia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Terre di Balbia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Terre Nere&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tiefenbrunner&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tirapelle Nicola&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tonnino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Torre Rosazza&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Trappolini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Travignoli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Uccelliera&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Umberto Fiore&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Val di Toro&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Valfaccenda&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Varvaglione&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vasco Sassetti&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Venturini Massimino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vicentini Agostino&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vignamaggio&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vigneti del Vulture&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Villa Calcinaia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Villa di Geggiano&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Villa Matilde&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Villa Russiz&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Villa Travignoli&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vini Italiani da Sogno&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Viticoltori Senesi Aretini&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Weinhof Kobler&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Zimòr&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Zuani&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:color:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;red&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;white&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{b7cae77c-fac8-4890-9f76-572d4a794112}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:Calculation_74590898324000768:qk]' />
            <field name='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:points:qk]' />
            <field name='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]' />
            <field name='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[ctd:title:qk]' />
            <field name='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
      <datasources>
        <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
      </datasources>
      <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
        <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
        <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='4' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='5' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='7' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='9' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='12' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='13' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='15' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='16' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='21' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='22' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='26' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='27' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='28' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='43' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='44' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='46' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='59' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='60' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='63' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='65' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='69' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='77' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='95' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='104' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='113' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='118' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='119' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='122' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='132' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='135' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='137' />
          <groupfilter function='member' level='[attr:CountWithin5Km:ok]' member='%many-values%' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Main Display' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Main Display' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Main Display' type='sheet' worksheet='Price/Quality' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Main Display' />
      </command>
    </action>
    <action caption='Filter on Region' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Region Selector' />
      <link caption='Filter on Region' delimiter=',' escape='\' expression='tsl:Main%20Display?%5Bfederated.18exo9q0zhbfpm1f5unlv0fr7u70%5D.%5Bregion_1%5D~s0=&lt;[region_1]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Main Display' />
      </command>
    </action>
    <action caption='Filter1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Region Selector' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Name of selected region' />
      </command>
    </action>
    <datasources>
      <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
    </datasources>
    <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
      <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality by Winery</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
          </datasources>
          <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
            <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
            <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[points]' derivation='Median' name='[med:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[color]' derivation='None' name='[none:color:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[long]' derivation='None' name='[none:long:ok]' pivot='key' type='ordinal' />
            <column-instance column='[points]' derivation='None' name='[none:points:ok]' pivot='key' type='ordinal' />
            <column-instance column='[points]' derivation='None' name='[none:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='None' name='[none:price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[winery]' derivation='None' name='[none:winery:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
            <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[color]' />
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Country,Points,Price,Province)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
              <groupfilter function='level-members' level='[province]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:long:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]'>
            <groupfilter function='member' level='[region_1]' member='&quot;Barolo&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' direction='DESC' using='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[med:points:qk]' />
          <slices>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Country,Points,Price,Province)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='131' />
            <format attr='title' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]' scope='rows' value='Quality Points' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='-90' />
            <format attr='wrap' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='auto' />
            <format attr='vertical-align' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='auto' />
            <format attr='font-weight' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='bold' />
            <format attr='font-size' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
            <format attr='opacity' id='refline0' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' />
              <lod column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' />
            </encodings>
            <reference-line axis-column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='436' />
                <format attr='maxheight' value='436' />
                <format attr='minwidth' value='18140' />
                <format attr='maxwidth' value='18140' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]</rows>
        <cols>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
            <column-instance column='[address]' derivation='Attribute' name='[attr:address:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[points]' derivation='Attribute' name='[attr:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='None' name='[none:long:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points]' derivation='None' name='[none:points:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:ok]' pivot='key' type='ordinal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[color]' />
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]'>
            <groupfilter function='member' level='[region_1]' member='&quot;Barolo&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:points:qk]' included-values='in-range-or-null'>
            <min>84</min>
            <max>95</max>
          </filter>
          <slices>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:points:qk]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:long:qk]' field-type='quantitative' max='939837.48437593598' min='851782.02779141278' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:lat:qk]' field-type='quantitative' max='5607872.3539429512' min='5544276.7464096844' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='true' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]' value='# of wineries with 5Km'>
              <formatted-text>
                <run># of wineries with 5Km</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:points:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:name:nk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:address:nk]' />
              <geometry column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:name:nk]&gt;</run>
                <run>&#10;&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:address:nk]&gt;&#10;</run>
                <run> review(s)&#10;&#10;</run>
                <run bold='true' fontcolor='#787878'>Mean Review Score:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:points:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Mean Price:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e15759' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:lat:qk]</rows>
        <cols>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:long:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Name of selected region'>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
          </datasources>
          <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
            <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
            <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[long]' derivation='None' name='[none:long:ok]' pivot='key' type='ordinal' />
            <column-instance column='[points]' derivation='None' name='[none:points:ok]' pivot='key' type='ordinal' />
            <column-instance column='[price]' derivation='None' name='[none:price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[region_1]' derivation='None' name='[none:region_1:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[color]' />
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Country,Province,Region 1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[province]' />
              <groupfilter function='level-members' level='[region_1]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:long:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:points:ok]' />
              <groupfilter function='level-members' level='[none:price:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Province)]'>
            <groupfilter function='level-members' level='[province]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Province,Region 1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[province]' member='&quot;Piedmont&quot;' />
              <groupfilter function='member' level='[region_1]' member='&quot;Barolo&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]'>
            <groupfilter function='level-members' level='[region_1]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Country,Province,Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Province)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Province,Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Color,Points,Price)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='748' />
            <format attr='height' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]' />
              <text column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='20'>&lt;</run>
                <run fontsize='20'>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</run>
                <run fontsize='20'>&gt;, &lt;</run>
                <run fontsize='20'>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</run>
                <run fontsize='20'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='5.5472970008850098' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Price/Quality'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Price vs Quality For These Wines</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
          </datasources>
          <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
            <column caption='Points/$' datatype='real' name='[Calculation_74590898324000768]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[points]/[price]' />
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[winery]' derivation='Attribute' name='[attr:winery:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_74590898324000768]' derivation='Avg' name='[avg:Calculation_74590898324000768:qk]' pivot='key' type='quantitative' />
            <column-instance column='[points]' derivation='Avg' name='[avg:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[color]' derivation='None' name='[none:color:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[long]' derivation='None' name='[none:long:ok]' pivot='key' type='ordinal' />
            <column-instance column='[points]' derivation='None' name='[none:points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Points' datatype='integer' name='[points]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Winery' datatype='string' name='[winery]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:long:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]'>
            <groupfilter function='member' level='[region_1]' member='&quot;Barolo&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]' included-values='all' />
          <filter class='categorical' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]'>
            <groupfilter function='level-members' level='[none:province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Lat,Long)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[Action (Region 1)]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]' scope='cols' value='Per-bottle Price (log scale)' />
            <format attr='auto-subtitle' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]' scope='rows' value='Review Points' />
            <encoding attr='space' class='0' field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]' field-type='quantitative' major-origin='80' major-spacing='2' minor-origin='0' minor-show='false' minor-spacing='1' scope='rows' type='space' />
            <format attr='stroke-color' value='#000000' />
            <format attr='tick-color' value='#898989' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' />
              <size column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:winery:nk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:points:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:Calculation_74590898324000768:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[ctd:title:qk]' />
              <tooltip column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:title:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Title:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:title:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Reviews:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[ctd:title:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Points:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:points:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Price:&#9;</run>
                <run bold='true'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:points:qk]</rows>
        <cols>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Selector'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Click to Choose a Wine-Producing Region in Italy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[region_1]' derivation='None' name='[none:region_1:nk]' pivot='key' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region 1' datatype='string' name='[region_1]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:lat:qk]' included-values='non-null' />
          <slices>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:lat:qk]</column>
            <column>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]' />
              <size column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]' />
              <text column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]' />
              <text column='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0'>&lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]&gt;</run>
                <run fontalignment='0'>, &lt;[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Main Display'>
      <style />
      <size maxheight='900' maxwidth='1366' minheight='900' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='winemag-data-geocoded' name='federated.18exo9q0zhbfpm1f5unlv0fr7u70' />
      </datasources>
      <datasource-dependencies datasource='federated.18exo9q0zhbfpm1f5unlv0fr7u70'>
        <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[CountWithin5Km]' role='dimension' type='ordinal' />
        <column-instance column='[CountWithin5Km]' derivation='Attribute' name='[attr:CountWithin5Km:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='14' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='13' name='Name of selected region' show-title='false' w='100000' x='0' y='0'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='56889' id='1' name='Map' show-title='false' w='53660' x='1318' y='7222' />
        <zone h='57556' id='7' name='Price/Quality' w='42240' x='55783' y='7111'>
          <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='33444' id='8' name='Boxplot' w='96779' x='1318' y='64889'>
          <layout-cache has-max-size-h='true' maxheight='297' minheight='297' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='8111' id='18' name='Price/Quality' pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' type='color' w='10249' x='87848' y='10556' />
        <zone h='6667' id='19' name='Map' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]' type='filter' values='database' w='30673' x='57028' y='333' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Region Selector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
                  <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</field>
                  <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Piedmont&quot;</value>
                <value>&quot;Barolo&quot;</value>
                <value>1533</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:lat:qk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_2:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[attr:CountWithin5Km:ok]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:CountWithin5Km:ok]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[avg:price:qk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:CountWithin5Km:ok]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:address:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:long:qk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:name:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Price/Quality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:AdhocCluster:1:ok]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:title:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:name:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:taster_name:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:title:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:winery:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Name of selected region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
                  <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Piedmont&quot;</value>
                <value>&quot;Roero&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:province:nk]</field>
            <field>[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:region_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Main Display'>
      <viewpoints>
        <viewpoint name='Boxplot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Name of selected region' />
        <viewpoint name='Price/Quality'>
          <zoom type='entire-view' />
          <highlight field='[federated.18exo9q0zhbfpm1f5unlv0fr7u70].[none:color:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Boxplot' width='384'>
      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
      hOi1kAcA15kiHvvpkzj8AUo2/YOf/O4FNrzxND/737eQECCEEANHyAPA2YpSrCkZROm1fLBh
      Azc+8C888cT3se/aQo071FsTQgjRWyEPAHq9AaejDWdbBbv2NzB5Qh5arRaNokFRQr01IYT4
      4giofvx+X5f/AoHQ9aWEfCJY2piZpD7zMnfe9RFx+UsZn6rj5Ps7YfQkkg2h3poQQnxxlJbv
      4OTJk53S2traiIyM7Hidac8EFoZkeyEPAKohjh//1x+pqmkhKycbEyox2XP48bhkGXIkhBBd
      +MlPfnJZ2r333stzzz13VbYX8jb5TNG7/M/Ln5AzKhezXgOKhtg4A6uee4VmuQsshBADRsgD
      gNfZSn1jK+r516qq0tZQyYEDh7F5Qr01IYQQvRWyLqD60h38/o8vUV17lorGAN/7zn40CqCq
      NNWeIX7SnSSbQ7U1IYQQfRWyAGBNzGL57XdRcWAjaw75ueOuxejOj/rRmSLIzs1H7gELIcTA
      EbIAYI5OYur0JPKGD2HojACTx45svwIQQggxIIV8FFBUShaTE7001tfg9asd6RqtgfiEeHQy
      FEgIIQaEkAcAT9Mpfvr4/2FfeQOBC+0/0Slj+f0zvyOjfx/+I4QQ4nOEPACcObyNU5psnnvx
      f7EaLpzuKxodkSG4Caz67GzbvJlGlwJ+F9ro4SyaOwG9An6Pnf27tlPV5EKrAYfDy+S5ixiW
      ZEV6o4QQorOQB4CkIenEJZ4jKT4Ooy70ze6BjevwZczhplEpKKqfIx+vZdP+eBZPyKSxsgxD
      egE3zUhAoyh4mkr5x/qPue/uG9BrJQQIIcTFQh4A9Mk5JDa+xMY9BxkefWHcj1ZvZujwYRi1
      fSu/tLKZmXPi0SgKKDpGTpzMzrf24p+QScLwMSSgdKw5pNFqcLmcneYkXEpV1Sumf9G1tDVw
      6vSBbvN5vTNRVWs/1OjqWLNmDU6ns+O1y+Wira2NV155pSMtLS2N2bNnX4vqDUg9+T30/2+m
      Z79Tle7rZrPZWLduXae0yspK6urqOh0X48ePJy8vr1e1DbWrtb9DHgDOHvyE/SfL2P5vP+iU
      Hqp7AOmJZkoqzpGcm4KCiqqa0LpbsANRn7X8qoq9sYo1qzYwcebyjrN/r9eLz+frVJ6qqng8
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Main Display' width='384'>
      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
      gEVb4wVkt+YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
    </thumbnail>
    <thumbnail height='128' name='Name of selected region' width='384'>
      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
      jHlCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Price/Quality' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Region Selector' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
